# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix
set-option -g default-command '~/fish-shell/target/release/fish'
set-option -g renumber-windows on
#set -g mouse on


# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind a last-window

set -g display-panes-time 4000

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 2
bind > resize-pane -R 2
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

unbind p
bind p paste-buffer
bind-key -T copy-mode-vi 'v' send-keys -X rectangle-toggle\; send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe "wl-copy"
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi 'H' send-keys -X start-of-line
bind-key -T copy-mode-vi 'L' send-keys -X end-of-line
bind-key ';' command-prompt

set -s escape-time 0
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

set -g focus-events on

# color
set -g status-style fg=white,bg=colour233
set -g pane-border-style fg=colour240,bg=black
set -g pane-active-border-style fg=colour124
set -g mode-style fg=default,bg=colour240

# status style (itchyny)
set -g status on
set -g status-position top
set -g status-interval 1
set -g status-justify left
set -g window-status-format " #[fg=colour246]#I#[fg=colour244]:#P #[fg=colour248]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour247] #I:#P #W "
set -g status-left-length 32
set -g status-left ''
set -g status-right-length 150
set -g status-right '#[fg=colour245] %x %T @ #H '
set -g message-style fg=white,bg=black,bold

set -g set-clipboard on
set-option -g history-limit 5000

bind-key C-e run-shell edit_buffer

set-option -g @easyjump-key-binding "f"
set -g @plugin "roy2220/easyjump.tmux"
run '~/.tmux/plugins/tpm/tpm'

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
